DROP TABLE IF EXISTS buyers CASCADE;
DROP TABLE IF EXISTS sellers CASCADE;
DROP TABLE IF EXISTS orders CASCADE;
DROP TABLE IF EXISTS favourites CASCADE;
DROP TABLE IF EXISTS mugs CASCADE;

CREATE TABLE buyers (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  phone_number VARCHAR(32) NOT NULL,
  city VARCHAR(255) NOT NULL,
  province VARCHAR(255) NOT NULL,
  country VARCHAR(255) NOT NULL,
  post_code VARCHAR(255) NOT NULL
);

CREATE TABLE sellers (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  phone_number VARCHAR(32) NOT NULL,
  city VARCHAR(255) NOT NULL,
  province VARCHAR(255) NOT NULL,
  country VARCHAR(255) NOT NULL,
  post_code VARCHAR(255) NOT NULL
);

CREATE TABLE orders (
  buyer_id INTEGER REFERENCES buyers(id) ON DELETE CASCADE,
  seller_id INTEGER REFERENCES sellers(id) ON DELETE CASCADE,
  mugs_id INTEGER REFERENCES mugs(id) ON DELETE CASCADE,
  total_price INTEGER  NOT NULL DEFAULT 0,
  total_quantity INTEGER  NOT NULL DEFAULT 0,
  purchase_date DATE
);

CREATE TABLE favourites (
  id SERIAL PRIMARY KEY NOT NULL,
  mugs_id INTEGER REFERENCES mugs(id) ON DELETE CASCADE,
  buyer_id INTEGER REFERENCES buyers(id) ON DELETE CASCADE
);

CREATE TABLE mugs (
  id SERIAL PRIMARY KEY NOT NULL,
  seller_id INTEGER REFERENCES sellers(id) ON DELETE CASCADE,
  price INTEGER  NOT NULL DEFAULT 0,
  name VARCHAR(255) NOT NULL,
  quantity INTEGER  NOT NULL DEFAULT 0,
  in_stock BOOLEAN DEFAULT TRUE
);
